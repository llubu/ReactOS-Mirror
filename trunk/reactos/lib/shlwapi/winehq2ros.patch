Index: istream.c
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/istream.c,v
retrieving revision 1.9
diff -u -r1.9 istream.c
--- istream.c	24 Sep 2003 05:14:39 -0000	1.9
+++ istream.c	22 Jan 2004 20:39:18 -0000
@@ -163,12 +163,12 @@
   TRACE("(%p,%ld,%ld,%p)\n", This, dlibMove.s.LowPart, dwOrigin, pNewPos);
 
   IStream_fnCommit(iface, 0); /* If ever buffered, this will be needed */
-  dwPos = SetFilePointer(This->hFile, dlibMove.s.LowPart, NULL, dwOrigin);
+  dwPos = SetFilePointer(This->hFile, dlibMove.u.LowPart, NULL, dwOrigin);
 
   if (pNewPos)
   {
-    pNewPos->s.HighPart = 0;
-    pNewPos->s.LowPart = dwPos;
+    pNewPos->u.HighPart = 0;
+    pNewPos->u.LowPart = dwPos;
   }
   return S_OK;
 }
@@ -293,8 +293,8 @@
     else
       lpStat->pwcsName = StrDupW(This->lpszPath);
     lpStat->type = This->type;
-    lpStat->cbSize.s.LowPart = fi.nFileSizeLow;
-    lpStat->cbSize.s.HighPart = fi.nFileSizeHigh;
+    lpStat->cbSize.u.LowPart = fi.nFileSizeLow;
+    lpStat->cbSize.u.HighPart = fi.nFileSizeHigh;
     lpStat->mtime = fi.ftLastWriteTime;
     lpStat->ctime = fi.ftCreationTime;
     lpStat->atime = fi.ftLastAccessTime;
Index: ordinal.c
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/ordinal.c,v
retrieving revision 1.75
diff -u -r1.75 ordinal.c
--- ordinal.c	1 Oct 2003 03:10:42 -0000	1.75
+++ ordinal.c	22 Jan 2004 20:39:20 -0000
@@ -3414,7 +3414,7 @@
  *  Success: A handle to the loaded module
  *  Failure: A NULL handle.
  */
-HMODULE WINAPI MLLoadLibraryA(LPCSTR new_mod, HMODULE inst_hwnd, DWORD dwFlags)
+HMODULE WINAPI MLLoadLibraryA(LPCSTR new_mod, HANDLE inst_hwnd, DWORD dwFlags, LPCSTR component, BOOL cross_code_page)
 {
   /* FIXME: Native appears to do DPA_Create and a DPA_InsertPtr for
    *        each call here.
@@ -3453,7 +3453,7 @@
  *
  * Unicode version of MLLoadLibraryA.
  */
-HMODULE WINAPI MLLoadLibraryW(LPCWSTR new_mod, HMODULE inst_hwnd, DWORD dwFlags)
+HMODULE WINAPI MLLoadLibraryW(LPCWSTR new_mod, HANDLE inst_hwnd, DWORD dwFlags, LPCWSTR component, BOOL cross_code_page)
 {
     WCHAR mod_path[2*MAX_PATH];
     LPWSTR ptr;
Index: path.c
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/path.c,v
retrieving revision 1.40
diff -u -r1.40 path.c
--- path.c	19 Jan 2004 21:46:14 -0000	1.40
+++ path.c	22 Jan 2004 20:39:22 -0000
@@ -32,6 +32,7 @@
 #include "wingdi.h"
 #include "winuser.h"
 #include "winreg.h"
+#include "winnls.h"
 #define NO_SHLWAPI_STREAM
 #include "shlwapi.h"
 #include "wine/debug.h"
@@ -3001,7 +3002,7 @@
  *  TRUE  If the path was changed to/already was a system folder
  *  FALSE If the path is invalid or SetFileAttributesA() fails
  */
-BOOL WINAPI PathMakeSystemFolderA(LPCSTR lpszPath)
+BOOL WINAPI PathMakeSystemFolderA(LPSTR lpszPath)
 {
   BOOL bRet = FALSE;
 
@@ -3021,7 +3022,7 @@
  *
  * See PathMakeSystemFolderA.
  */
-BOOL WINAPI PathMakeSystemFolderW(LPCWSTR lpszPath)
+BOOL WINAPI PathMakeSystemFolderW(LPWSTR lpszPath)
 {
   DWORD dwDefaultAttr = FILE_ATTRIBUTE_READONLY, dwAttr;
   WCHAR buff[MAX_PATH];
@@ -3268,7 +3269,7 @@
   if (lpszUrl[1] != ':' && lpszUrl[1] != '|' && isalphaW(*lpszUrl))
     return E_INVALIDARG;
 
-  hr = UrlUnescapeW(lpszUrl, lpszPath, pcchPath, dwFlags);
+  hr = UrlUnescapeW((LPWSTR) lpszUrl, lpszPath, pcchPath, dwFlags);
   if (lpszPath[1] == '|')
     lpszPath[1] = ':';
 
@@ -3416,7 +3417,7 @@
  *  Failure: FALSE, if lpszPath is NULL, empty, not a directory, or calling
  *           SetFileAttributesA() fails.
  */
-BOOL WINAPI PathUnmakeSystemFolderA(LPCSTR lpszPath)
+BOOL WINAPI PathUnmakeSystemFolderA(LPSTR lpszPath)
 {
   DWORD dwAttr;
 
@@ -3435,7 +3436,7 @@
  *
  * See PathUnmakeSystemFolderA.
  */
-BOOL WINAPI PathUnmakeSystemFolderW(LPCWSTR lpszPath)
+BOOL WINAPI PathUnmakeSystemFolderW(LPWSTR lpszPath)
 {
   DWORD dwAttr;
 
@@ -3745,7 +3746,7 @@
  *  The match is made against the end of the suffix string, so for example:
  *  lpszSuffix="fooBAR" matches "BAR", but lpszSuffix="fooBARfoo" does not.
  */
-int WINAPI PathFindSuffixArrayA(LPCSTR lpszSuffix, LPCSTR *lppszArray, int dwCount)
+LPCSTR WINAPI PathFindSuffixArrayA(LPCSTR lpszSuffix, LPCSTR *lppszArray, int dwCount)
 {
   size_t dwLen;
   int dwRet = 0;
@@ -3762,13 +3763,13 @@
       if (dwCompareLen < dwLen)
       {
         if (!strcmp(lpszSuffix + dwLen - dwCompareLen, *lppszArray))
-          return dwRet; /* Found */
+          return *lppszArray; /* Found */
       }
       dwRet++;
       lppszArray++;
     }
   }
-  return 0;
+  return NULL;
 }
 
 /*************************************************************************
@@ -3776,7 +3777,7 @@
  *
  * See PathFindSuffixArrayA.
  */
-int WINAPI PathFindSuffixArrayW(LPCWSTR lpszSuffix, LPCWSTR *lppszArray, int dwCount)
+LPCWSTR WINAPI PathFindSuffixArrayW(LPCWSTR lpszSuffix, LPCWSTR *lppszArray, int dwCount)
 {
   size_t dwLen;
   int dwRet = 0;
@@ -3793,13 +3794,13 @@
       if (dwCompareLen < dwLen)
       {
         if (!strcmpW(lpszSuffix + dwLen - dwCompareLen, *lppszArray))
-          return dwRet; /* Found */
+          return *lppszArray; /* Found */
       }
       dwRet++;
       lppszArray++;
     }
   }
-  return 0;
+  return NULL;
 }
 
 /*************************************************************************
Index: reg.c
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/reg.c,v
retrieving revision 1.45
diff -u -r1.45 reg.c
--- reg.c	18 Jan 2004 22:07:57 -0000	1.45
+++ reg.c	22 Jan 2004 20:39:23 -0000
@@ -232,7 +232,7 @@
  *  Success: ERROR_SUCCESS
  *  Failure: An error code from RegCloseKey().
  */
-LONG WINAPI SHRegCloseUSKey(
+DWORD WINAPI SHRegCloseUSKey(
         HUSKEY hUSKey) /* [I] Key to close */
 {
     LPInternal_HUSKEY mihk = (LPInternal_HUSKEY)hUSKey;
@@ -634,7 +634,7 @@
  *  Success: ERROR_SUCCESS
  *  Failure: An error code from RegQueryInfoKeyA().
  */
-LONG WINAPI SHRegQueryInfoUSKeyA(
+DWORD WINAPI SHRegQueryInfoUSKeyA(
 	HUSKEY hUSKey, /* [I] Key to query */
 	LPDWORD pcSubKeys, /* [O] Destination for number of sub keys */
 	LPDWORD pcchMaxSubKeyLen, /* [O] Destination for the length of the biggest sub key name */
@@ -675,7 +675,7 @@
  *
  * See SHRegQueryInfoUSKeyA.
  */
-LONG WINAPI SHRegQueryInfoUSKeyW(
+DWORD WINAPI SHRegQueryInfoUSKeyW(
 	HUSKEY hUSKey,
 	LPDWORD pcSubKeys,
 	LPDWORD pcchMaxSubKeyLen,
@@ -720,7 +720,7 @@
  *  Success: ERROR_SUCCESS
  *  Failure: An error code from RegEnumKeyExA().
  */
-LONG WINAPI SHRegEnumUSKeyA(
+DWORD WINAPI SHRegEnumUSKeyA(
 	HUSKEY hUSKey,                 /* [in] Key to enumerate */
 	DWORD dwIndex,                 /* [in] Index within hUSKey */
 	LPSTR pszName,                 /* [out] Name of the enumerated value */
@@ -755,7 +755,7 @@
  *
  * See SHRegEnumUSKeyA.
  */
-LONG WINAPI SHRegEnumUSKeyW(
+DWORD WINAPI SHRegEnumUSKeyW(
 	HUSKEY hUSKey,
 	DWORD dwIndex,
 	LPWSTR pszName,
@@ -1104,8 +1104,8 @@
  * RETURNS
  *  The result of calling RegQueryInfoKeyA().
  */
-LONG WINAPI SHQueryInfoKeyA(HKEY hKey, LPDWORD pwSubKeys, LPDWORD pwSubKeyMax,
-                            LPDWORD pwValues, LPDWORD pwValueMax)
+DWORD WINAPI SHQueryInfoKeyA(HKEY hKey, LPDWORD pwSubKeys, LPDWORD pwSubKeyMax,
+                             LPDWORD pwValues, LPDWORD pwValueMax)
 {
   TRACE("(hkey=%p,%p,%p,%p,%p)\n", hKey, pwSubKeys, pwSubKeyMax,
         pwValues, pwValueMax);
@@ -1118,8 +1118,8 @@
  *
  * See SHQueryInfoKeyA.
  */
-LONG WINAPI SHQueryInfoKeyW(HKEY hKey, LPDWORD pwSubKeys, LPDWORD pwSubKeyMax,
-                            LPDWORD pwValues, LPDWORD pwValueMax)
+DWORD WINAPI SHQueryInfoKeyW(HKEY hKey, LPDWORD pwSubKeys, LPDWORD pwSubKeyMax,
+                             LPDWORD pwValues, LPDWORD pwValueMax)
 {
   TRACE("(hkey=%p,%p,%p,%p,%p)\n", hKey, pwSubKeys, pwSubKeyMax,
         pwValues, pwValueMax);
@@ -1593,8 +1593,8 @@
  *   Success: ERROR_SUCCESS. lpszSubKey and pwLen are updated.
  *   Failure: An error code from RegEnumKeyExA().
  */
-LONG WINAPI SHEnumKeyExA(HKEY hKey, DWORD dwIndex, LPSTR lpszSubKey,
-                         LPDWORD pwLen)
+DWORD WINAPI SHEnumKeyExA(HKEY hKey, DWORD dwIndex, LPSTR lpszSubKey,
+                          LPDWORD pwLen)
 {
   TRACE("(hkey=%p,%ld,%s,%p)\n", hKey, dwIndex, debugstr_a(lpszSubKey), pwLen);
 
@@ -1606,8 +1606,8 @@
  *
  * See SHEnumKeyExA.
  */
-LONG WINAPI SHEnumKeyExW(HKEY hKey, DWORD dwIndex, LPWSTR lpszSubKey,
-                         LPDWORD pwLen)
+DWORD WINAPI SHEnumKeyExW(HKEY hKey, DWORD dwIndex, LPWSTR lpszSubKey,
+                          LPDWORD pwLen)
 {
   TRACE("(hkey=%p,%ld,%s,%p)\n", hKey, dwIndex, debugstr_w(lpszSubKey), pwLen);
 
@@ -1632,9 +1632,9 @@
  *   Success: ERROR_SUCCESS. Output parameters are updated.
  *   Failure: An error code from RegEnumValueA().
  */
-LONG WINAPI SHEnumValueA(HKEY hKey, DWORD dwIndex, LPSTR lpszValue,
-                         LPDWORD pwLen, LPDWORD pwType,
-                         LPVOID pvData, LPDWORD pcbData)
+DWORD WINAPI SHEnumValueA(HKEY hKey, DWORD dwIndex, LPSTR lpszValue,
+                          LPDWORD pwLen, LPDWORD pwType,
+                          LPVOID pvData, LPDWORD pcbData)
 {
   TRACE("(hkey=%p,%ld,%s,%p,%p,%p,%p)\n", hKey, dwIndex,
         debugstr_a(lpszValue), pwLen, pwType, pvData, pcbData);
@@ -1648,9 +1648,9 @@
  *
  * See SHEnumValueA.
  */
-LONG WINAPI SHEnumValueW(HKEY hKey, DWORD dwIndex, LPWSTR lpszValue,
-                         LPDWORD pwLen, LPDWORD pwType,
-                         LPVOID pvData, LPDWORD pcbData)
+DWORD WINAPI SHEnumValueW(HKEY hKey, DWORD dwIndex, LPWSTR lpszValue,
+                          LPDWORD pwLen, LPDWORD pwType,
+                          LPVOID pvData, LPDWORD pcbData)
 {
   TRACE("(hkey=%p,%ld,%s,%p,%p,%p,%p)\n", hKey, dwIndex,
         debugstr_w(lpszValue), pwLen, pwType, pvData, pcbData);
Index: shlwapi.spec
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/shlwapi.spec,v
retrieving revision 1.83
diff -u -r1.83 shlwapi.spec
--- shlwapi.spec	19 Jan 2004 21:46:14 -0000	1.83
+++ shlwapi.spec	22 Jan 2004 20:39:24 -0000
@@ -374,8 +374,8 @@
 374 stub -noname SHCheckDiskForMediaA
 375 stub -noname SHCheckDiskForMediaW
 376 stdcall -noname MLGetUILanguage()  # kernel32.GetUserDefaultUILanguage
-377 stdcall MLLoadLibraryA(str long long)
-378 stdcall MLLoadLibraryW(wstr long long)
+377 stdcall MLLoadLibraryA(str long long long long)
+378 stdcall MLLoadLibraryW(wstr long long long long)
 379 stub -noname Shell_GetCachedImageIndexWrapW
 380 stub -noname Shell_GetCachedImageIndexWrapA
 381 stub -noname AssocCopyVerbs
Index: string.c
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/string.c,v
retrieving revision 1.39
diff -u -r1.39 string.c
--- string.c	22 Nov 2003 00:00:53 -0000	1.39
+++ string.c	22 Jan 2004 20:39:25 -0000
@@ -556,7 +556,7 @@
 {
   TRACE("(%s,%s)\n", debugstr_w(lpszStr), debugstr_w(lpszSearch));
 
-  return SHLWAPI_StrStrHelperW(lpszStr, lpszSearch, strncmpW);
+  return SHLWAPI_StrStrHelperW(lpszStr, lpszSearch, (int (*)(LPCWSTR,LPCWSTR,int))wcsncmp);
 }
 
 /*************************************************************************
@@ -665,7 +665,7 @@
 {
   TRACE("(%s,%s)\n", debugstr_w(lpszStr), debugstr_w(lpszSearch));
 
-  return SHLWAPI_StrStrHelperW(lpszStr, lpszSearch, strncmpiW);
+  return SHLWAPI_StrStrHelperW(lpszStr, lpszSearch, (int (*)(LPCWSTR,LPCWSTR,int))_wcsnicmp);
 }
 
 /*************************************************************************
@@ -1343,7 +1343,7 @@
  *           CoTaskMemFree() and its type set to STRRET_CSTRA.
  *  Failure: E_FAIL, if any parameters are invalid.
  */
-HRESULT WINAPI StrRetToBufA (LPSTRRET src, const ITEMIDLIST *pidl, LPSTR dest, DWORD len)
+HRESULT WINAPI StrRetToBufA (LPSTRRET src, const ITEMIDLIST *pidl, LPSTR dest, UINT len)
 {
 	/* NOTE:
 	 *  This routine is identical to that in dlls/shell32/shellstring.c.
@@ -1392,7 +1392,7 @@
  *
  * See StrRetToBufA.
  */
-HRESULT WINAPI StrRetToBufW (LPSTRRET src, const ITEMIDLIST *pidl, LPWSTR dest, DWORD len)
+HRESULT WINAPI StrRetToBufW (LPSTRRET src, const ITEMIDLIST *pidl, LPWSTR dest, UINT len)
 {
 	TRACE("dest=%p len=0x%lx strret=%p pidl=%p stub\n",dest,len,src,pidl);
 
Index: url.c
===================================================================
RCS file: /home/wine/wine/dlls/shlwapi/url.c,v
retrieving revision 1.26
diff -u -r1.26 url.c
--- url.c	1 Oct 2003 03:10:42 -0000	1.26
+++ url.c	22 Jan 2004 20:39:26 -0000
@@ -34,9 +34,9 @@
 #include "shlwapi.h"
 #include "wine/debug.h"
 
-HMODULE WINAPI MLLoadLibraryW(LPCWSTR,HMODULE,DWORD);
-BOOL    WINAPI MLFreeLibrary(HMODULE);
-HRESULT WINAPI MLBuildResURLW(LPCWSTR,HMODULE,DWORD,LPCWSTR,LPWSTR,DWORD);
+HINSTANCE WINAPI MLLoadLibraryW(LPCWSTR,HANDLE,DWORD,LPCWSTR,BOOL);
+BOOL      WINAPI MLFreeLibrary(HMODULE);
+HRESULT   WINAPI MLBuildResURLW(LPCWSTR,HMODULE,DWORD,LPCWSTR,LPWSTR,DWORD);
 
 WINE_DEFAULT_DEBUG_CHANNEL(shell);
 
@@ -1130,7 +1130,7 @@
  *  the first occurrence of either a '?' or '#' character.
  */
 HRESULT WINAPI UrlUnescapeA(
-	LPCSTR pszUrl,
+	LPSTR pszUrl,
 	LPSTR pszUnescaped,
 	LPDWORD pcchUnescaped,
 	DWORD dwFlags)
@@ -1194,7 +1194,7 @@
  * See UrlUnescapeA.
  */
 HRESULT WINAPI UrlUnescapeW(
-	LPCWSTR pszUrl,
+	LPWSTR pszUrl,
 	LPWSTR pszUnescaped,
 	LPDWORD pcchUnescaped,
 	DWORD dwFlags)
@@ -1396,14 +1396,14 @@
  *  Success: TRUE. lpDest is filled with the computed hash value.
  *  Failure: FALSE, if any argument is invalid.
  */
-BOOL WINAPI HashData(const unsigned char *lpSrc, INT nSrcLen,
-                     unsigned char *lpDest, INT nDestLen)
+HRESULT WINAPI HashData(LPBYTE lpSrc, DWORD nSrcLen,
+                     LPBYTE lpDest, DWORD nDestLen)
 {
   INT srcCount = nSrcLen - 1, destCount = nDestLen - 1;
 
   if (IsBadReadPtr(lpSrc, nSrcLen) ||
       IsBadWritePtr(lpDest, nDestLen))
-    return FALSE;
+    return ERROR_INVALID_PARAMETER;
 
   while (destCount >= 0)
   {
@@ -1421,7 +1421,7 @@
     }
     srcCount--;
   }
-  return TRUE;
+  return ERROR_SUCCESS;
 }
 
 /*************************************************************************
@@ -1438,7 +1438,7 @@
  *  Success: S_OK. lpDest is filled with the computed hash value.
  *  Failure: E_INVALIDARG, if any argument is invalid.
  */
-HRESULT WINAPI UrlHashA(LPCSTR pszUrl, unsigned char *lpDest, INT nDestLen)
+HRESULT WINAPI UrlHashA(LPCSTR pszUrl, unsigned char *lpDest, DWORD nDestLen)
 {
   if (IsBadStringPtrA(pszUrl, -1) || IsBadWritePtr(lpDest, nDestLen))
     return E_INVALIDARG;
@@ -1452,7 +1452,7 @@
  *
  * See UrlHashA.
  */
-HRESULT WINAPI UrlHashW(LPCWSTR pszUrl, unsigned char *lpDest, INT nDestLen)
+HRESULT WINAPI UrlHashW(LPCWSTR pszUrl, unsigned char *lpDest, DWORD nDestLen)
 {
   char szUrl[MAX_PATH];
 
@@ -1900,9 +1900,9 @@
     memset(pl, 0, sizeof(WINE_PARSE_URL));
     pl->pScheme = pszUrl;
     work = URL_ScanID(pl->pScheme, &pl->szScheme, SCHEME);
-    if (!*work || (*work != L':')) goto ERROR;
+    if (!*work || (*work != L':')) goto ErrorExit;
     work++;
-    if ((*work != L'/') || (*(work+1) != L'/')) goto ERROR;
+    if ((*work != L'/') || (*(work+1) != L'/')) goto ErrorExit;
     pl->pUserName = work + 2;
     work = URL_ScanID(pl->pUserName, &pl->szUserName, USERPASS);
     if (*work == L':' ) {
@@ -1926,7 +1926,7 @@
 	pl->szUserName = pl->szPassword = 0;
 	work = pl->pUserName - 1;
 	pl->pUserName = pl->pPassword = 0;
-    } else goto ERROR;
+    } else goto ErrorExit;
 
     /* now start parsing hostname or hostnumber */
     work++;
@@ -1951,7 +1951,7 @@
 	  pl->pPort, pl->szPort,
 	  pl->pQuery, pl->szQuery);
     return S_OK;
-  ERROR:
+  ErrorExit:
     FIXME("failed to parse %s\n", debugstr_w(pszUrl));
     return E_INVALIDARG;
 }
@@ -2433,7 +2433,7 @@
     dwDestLen -= (szResLen + 1);
     memcpy(lpszDest, szRes, sizeof(szRes));
 
-    hMod = MLLoadLibraryW(lpszLibName, hMod, dwFlags);
+    hMod = MLLoadLibraryW(lpszLibName, hMod, dwFlags, NULL, FALSE);
 
     if (hMod)
     {
