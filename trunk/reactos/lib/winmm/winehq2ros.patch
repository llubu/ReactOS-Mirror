Index: lolvldrv.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/lolvldrv.c,v
retrieving revision 1.59
diff -u -r1.59 lolvldrv.c
--- lolvldrv.c	20 Aug 2004 20:01:31 -0000	1.59
+++ lolvldrv.c	19 Sep 2004 11:16:24 -0000
@@ -758,11 +758,18 @@
 {
     TRACE("()\n");
     /* first load hardware drivers */
+#ifndef __REACTOS__
     MMDRV_Install("wineoss.drv",   	"wineoss.drv",	FALSE);
+#endif /* __REACTOS__ */
+
+#ifdef __REACTOS__
+    // AG: TESTING:
+    MMDRV_Install("mmdrv.dll", "mmdrv.dll", FALSE);
+#endif
 
     /* finish with mappers */
-    MMDRV_Install("wavemapper",	   	"msacm.drv",	TRUE);
-    MMDRV_Install("midimapper",   	"midimap.drv",	TRUE);
+    MMDRV_Install("wavemapper",     "msacm32.dll",    TRUE);
+    MMDRV_Install("midimapper",     "midimap.dll",  TRUE);
 
     return TRUE;
 }
Index: time.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/time.c,v
retrieving revision 1.26
diff -u -r1.26 time.c
--- time.c	12 Jan 2004 21:03:10 -0000	1.26
+++ time.c	19 Sep 2004 11:16:24 -0000
@@ -175,14 +175,19 @@
     volatile HANDLE *pActive = (volatile HANDLE *)&TIME_hMMTimer;
     DWORD last_time, cur_time;
 
+#ifndef __REACTOS__
     usleep(MMSYSTIME_STDINTERVAL * 1000);
+#endif /* __REACTOS__ */
+
     last_time = GetTickCount();
     while (*pActive) {
 	TIME_MMSysTimeCallback(iData);
 	cur_time = GetTickCount();
 	while (last_time < cur_time)
 	    last_time += MMSYSTIME_STDINTERVAL;
+#ifndef __REACTOS__
 	usleep((last_time - cur_time) * 1000);
+#endif /* __REACTOS__ */
     }
     return 0;
 }
Index: winmm.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/winmm.c,v
retrieving revision 1.42
diff -u -r1.42 winmm.c
--- winmm.c	16 Aug 2004 23:19:17 -0000	1.42
+++ winmm.c	19 Sep 2004 11:16:25 -0000
@@ -126,10 +126,12 @@
         loaded = -1;
         if (h)
         {
+#ifndef __REACTOS__
             pGetModuleHandle16 = (void*)GetProcAddress(h, "GetModuleHandle16");
             pLoadLibrary16 = (void*)GetProcAddress(h, "LoadLibrary16");
             if (pGetModuleHandle16 && pLoadLibrary16 &&
                 (pGetModuleHandle16("MMSYSTEM.DLL") || pLoadLibrary16("MMSYSTEM.DLL")))
+#endif /* __REACTOS__ */
                 loaded = 1;
         }
     }
Index: winmm_res.rc
===================================================================
RCS file: /home/wine/wine/dlls/winmm/winmm_res.rc,v
retrieving revision 1.17
diff -u -r1.17 winmm_res.rc
--- winmm_res.rc	16 Aug 2004 20:02:09 -0000	1.17
+++ winmm_res.rc	19 Sep 2004 11:16:26 -0000
@@ -34,7 +34,7 @@
 #include "winmm_Es.rc"
 #include "winmm_Fr.rc"
 #include "winmm_It.rc"
-#include "winmm_Ja.rc"
+/* #include "winmm_Ja.rc" */ /* Gives error during ReactOS build */
 #include "winmm_Nl.rc"
 #include "winmm_Pt.rc"
 #include "winmm_Ru.rc"
