? Makefile
? Makefile.ros
? Makefile.ros-template
? winehq2ros.patch
? winmm.spec.def
Index: lolvldrv.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/lolvldrv.c,v
retrieving revision 1.62
diff -u -r1.62 lolvldrv.c
--- lolvldrv.c	1 Dec 2004 15:32:19 -0000	1.62
+++ lolvldrv.c	7 Dec 2004 21:01:01 -0000
@@ -761,11 +761,18 @@
 {
     TRACE("()\n");
     /* first load hardware drivers */
+#ifndef __REACTOS__
     MMDRV_Install("wineoss.drv",   	"wineoss.drv",	FALSE);
+#endif /* __REACTOS__ */
+
+#ifdef __REACTOS__
+    // AG: TESTING:
+    MMDRV_Install("mmdrv.dll", "mmdrv.dll", FALSE);
+#endif
 
     /* finish with mappers */
-    MMDRV_Install("wavemapper",	   	"msacm.drv",	TRUE);
-    MMDRV_Install("midimapper",   	"midimap.drv",	TRUE);
+    MMDRV_Install("wavemapper",     "msacm32.dll",    TRUE);
+    MMDRV_Install("midimapper",     "midimap.dll",  TRUE);
 
     return TRUE;
 }
Index: winmm.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/winmm.c,v
retrieving revision 1.46
diff -u -r1.46 winmm.c
--- winmm.c	21 Nov 2004 15:37:04 -0000	1.46
+++ winmm.c	7 Dec 2004 21:01:02 -0000
@@ -94,7 +94,9 @@
 	return FALSE;
     WINMM_IData->hWinMM32Instance = hInstDLL;
     InitializeCriticalSection(&WINMM_IData->cs);
+/* FIXME crashes in ReactOS
     WINMM_IData->cs.DebugInfo->Spare[1] = (DWORD)"WINMM_IData";
+*/
     WINMM_IData->psStopEvent = CreateEventA(NULL, TRUE, FALSE, NULL);
     WINMM_IData->psLastEvent = CreateEventA(NULL, TRUE, FALSE, NULL);
     TRACE("Created IData (%p)\n", WINMM_IData);
@@ -137,10 +139,12 @@
         loaded = -1;
         if (h)
         {
+#ifndef __REACTOS__
             pGetModuleHandle16 = (void*)GetProcAddress(h, "GetModuleHandle16");
             pLoadLibrary16 = (void*)GetProcAddress(h, "LoadLibrary16");
             if (pGetModuleHandle16 && pLoadLibrary16 &&
                 (pGetModuleHandle16("MMSYSTEM.DLL") || pLoadLibrary16("MMSYSTEM.DLL")))
+#endif /* __REACTOS__ */
                 loaded = 1;
         }
     }
@@ -669,7 +673,7 @@
 /**************************************************************************
  * 				mixerMessage		[WINMM.@]
  */
-UINT WINAPI mixerMessage(HMIXER hmix, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2)
+DWORD WINAPI mixerMessage(HMIXER hmix, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2)
 {
     LPWINE_MLD		wmld;
 
@@ -2669,8 +2673,8 @@
  *			waveOutOpen			[WINMM.@]
  * All the args/structs have the same layout as the win16 equivalents
  */
-UINT WINAPI waveOutOpen(LPHWAVEOUT lphWaveOut, UINT uDeviceID,
-                       const LPWAVEFORMATEX lpFormat, DWORD_PTR dwCallback,
+MMRESULT WINAPI waveOutOpen(LPHWAVEOUT lphWaveOut, UINT uDeviceID,
+                       LPCWAVEFORMATEX lpFormat, DWORD_PTR dwCallback,
                        DWORD_PTR dwInstance, DWORD dwFlags)
 {
     return WAVE_Open((HANDLE*)lphWaveOut, uDeviceID, MMDRV_WAVEOUT, lpFormat,
@@ -3054,8 +3058,8 @@
 /**************************************************************************
  * 				waveInOpen			[WINMM.@]
  */
-UINT WINAPI waveInOpen(HWAVEIN* lphWaveIn, UINT uDeviceID,
-		       const LPWAVEFORMATEX lpFormat, DWORD_PTR dwCallback,
+MMRESULT WINAPI waveInOpen(HWAVEIN* lphWaveIn, UINT uDeviceID,
+		       LPCWAVEFORMATEX lpFormat, DWORD_PTR dwCallback,
 		       DWORD_PTR dwInstance, DWORD dwFlags)
 {
     return WAVE_Open((HANDLE*)lphWaveIn, uDeviceID, MMDRV_WAVEIN, lpFormat,
Index: winmm_res.rc
===================================================================
RCS file: /home/wine/wine/dlls/winmm/winmm_res.rc,v
retrieving revision 1.17
diff -u -r1.17 winmm_res.rc
--- winmm_res.rc	16 Aug 2004 20:02:09 -0000	1.17
+++ winmm_res.rc	7 Dec 2004 21:01:03 -0000
@@ -34,7 +34,7 @@
 #include "winmm_Es.rc"
 #include "winmm_Fr.rc"
 #include "winmm_It.rc"
-#include "winmm_Ja.rc"
+/* #include "winmm_Ja.rc" */ /* Gives error during ReactOS build */
 #include "winmm_Nl.rc"
 #include "winmm_Pt.rc"
 #include "winmm_Ru.rc"
Index: lib/winmm/joystick.c
===================================================================
RCS file: /CVS/ReactOS/reactos/lib/winmm/joystick.c,v
retrieving revision 1.2
diff -u -r1.2 joystick.c
--- lib/winmm/joystick.c	25 Feb 2004 20:00:41 -0000	1.2
+++ lib/winmm/joystick.c	20 Dec 2004 02:00:40 -0000
@@ -41,6 +41,7 @@
 #include "wingdi.h"
 #include "winuser.h"
 #include "winnls.h"
+#include "winemm.h"
 
 #include "mmddk.h"
 
Index: lib/winmm/winemm.h
===================================================================
RCS file: /CVS/ReactOS/reactos/lib/winmm/winemm.h,v
retrieving revision 1.6
diff -u -r1.6 winemm.h
--- lib/winmm/winemm.h	20 Oct 2004 17:42:11 -0000	1.6
+++ lib/winmm/winemm.h	20 Dec 2004 01:59:44 -0000
@@ -222,6 +222,7 @@
 typedef	WINMM_MapType	        (*MMDRV_MAPFUNC)(UINT wMsg, LPDWORD lpdwUser, LPDWORD lpParam1, LPDWORD lpParam2);
 typedef	WINMM_MapType	        (*MMDRV_UNMAPFUNC)(UINT wMsg, LPDWORD lpdwUser, LPDWORD lpParam1, LPDWORD lpParam2, MMRESULT ret);
 
+HDRVR WINAPI	OpenDriverA(LPCSTR lpDriverName, LPCSTR lpSectionName, LPARAM lParam2);
 LPWINE_DRIVER	DRIVER_FindFromHDrvr(HDRVR hDrvr);
 BOOL		DRIVER_GetLibName(LPCSTR keyName, LPCSTR sectName, LPSTR buf, int sz);
 LPWINE_DRIVER	DRIVER_TryOpenDriver32(LPCSTR fn, LPARAM lParam2);
