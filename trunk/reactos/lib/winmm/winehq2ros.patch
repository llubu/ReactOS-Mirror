Index: lolvldrv.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/lolvldrv.c,v
retrieving revision 1.56
diff -u -r1.56 lolvldrv.c
--- lolvldrv.c	5 May 2004 01:00:54 -0000	1.56
+++ lolvldrv.c	8 May 2004 14:17:20 -0000
@@ -497,10 +497,12 @@
     case DRV_QUERYDEVICEINTERFACESIZE:
         return MMDRV_Message(mld, uMsg, dwParam1, dwParam2, TRUE);
 
+#ifdef __WINESRC__
     case DRV_QUERYDSOUNDIFACE: /* Wine-specific: Retrieve DirectSound interface */
     case DRV_QUERYDSOUNDDESC: /* Wine-specific: Retrieve DirectSound driver description*/
     case DRV_QUERYDSOUNDGUID: /* Wine-specific: Retrieve DirectSound driver GUID */
 	return MMDRV_Message(mld, uMsg, dwParam1, dwParam2, TRUE);
+#endif
 
     default:
 	WARN("Unknown call %04x\n", uMsg);
@@ -743,11 +745,18 @@
 static BOOL	MMDRV_InitHardcoded(void)
 {
     /* first load hardware drivers */
+#ifndef __REACTOS__
     MMDRV_Install("wineoss.drv",   	"wineoss.drv",	FALSE);
+#endif /* __REACTOS__ */
+
+#ifdef __REACTOS__
+    // AG: TESTING:
+    MMDRV_Install("mmdrv.dll", "mmdrv.dll", FALSE);
+#endif
 
     /* finish with mappers */
-    MMDRV_Install("wavemapper",	   	"msacm.drv",	TRUE);
-    MMDRV_Install("midimapper",   	"midimap.drv",	TRUE);
+    MMDRV_Install("wavemapper",     "msacm32.dll",    TRUE);
+    MMDRV_Install("midimapper",     "midimap.dll",  TRUE);
 
     return TRUE;
 }
Index: time.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/time.c,v
retrieving revision 1.26
diff -u -r1.26 time.c
--- time.c	12 Jan 2004 21:03:10 -0000	1.26
+++ time.c	8 May 2004 14:17:20 -0000
@@ -175,14 +175,19 @@
     volatile HANDLE *pActive = (volatile HANDLE *)&TIME_hMMTimer;
     DWORD last_time, cur_time;
 
+#ifndef __REACTOS__
     usleep(MMSYSTIME_STDINTERVAL * 1000);
+#endif /* __REACTOS__ */
+
     last_time = GetTickCount();
     while (*pActive) {
 	TIME_MMSysTimeCallback(iData);
 	cur_time = GetTickCount();
 	while (last_time < cur_time)
 	    last_time += MMSYSTIME_STDINTERVAL;
+#ifndef __REACTOS__
 	usleep((last_time - cur_time) * 1000);
+#endif /* __REACTOS__ */
     }
     return 0;
 }
Index: winmm.c
===================================================================
RCS file: /home/wine/wine/dlls/winmm/winmm.c,v
retrieving revision 1.33
diff -u -r1.33 winmm.c
--- winmm.c	27 Feb 2004 21:29:32 -0000	1.33
+++ winmm.c	8 May 2004 14:17:21 -0000
@@ -125,10 +125,12 @@
         loaded = -1;
         if (h)
         {
+#ifndef __REACTOS__
             pGetModuleHandle16 = (void*)GetProcAddress(h, "GetModuleHandle16");
             pLoadLibrary16 = (void*)GetProcAddress(h, "LoadLibrary16");
             if (pGetModuleHandle16 && pLoadLibrary16 &&
                 (pGetModuleHandle16("MMSYSTEM.DLL") || pLoadLibrary16("MMSYSTEM.DLL")))
+#endif /* __REACTOS__ */
                 loaded = 1;
         }
     }
