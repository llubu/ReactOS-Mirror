--- D:/Wine-CVS/wine/dlls/wininet/http.c	Wed May 28 14:33:28 2008
+++ D:/ReactOS-Trunk/reactos/dll/win32/wininet/http.c	Sun Jun 15 18:16:06 2008
@@ -61,6 +61,8 @@
 #include "wine/debug.h"
 #include "wine/unicode.h"
 
+#include "inet_ntop.c"
+
 WINE_DEFAULT_DEBUG_CHANNEL(wininet);
 
 static const WCHAR g_szHttp1_0[] = {'H','T','T','P','/','1','.','0',0};
--- D:/Wine-CVS/wine/dlls/wininet/internet.c	Wed May 28 14:33:28 2008
+++ D:/ReactOS-Trunk/reactos/dll/win32/wininet/internet.c	Fri May 30 18:04:29 2008
@@ -3101,19 +3101,22 @@
 
 LPSTR INTERNET_GetNextLine(INT nSocket, LPDWORD dwLen)
 {
-    struct pollfd pfd;
+    struct timeval tv;
+    fd_set infd;
     BOOL bSuccess = FALSE;
     INT nRecv = 0;
     LPSTR lpszBuffer = INTERNET_GetResponseBuffer();
 
     TRACE("\n");
 
-    pfd.fd = nSocket;
-    pfd.events = POLLIN;
+    FD_ZERO(&infd);
+    FD_SET(nSocket, &infd);
+    tv.tv_sec=RESPONSE_TIMEOUT;
+    tv.tv_usec=0;
 
     while (nRecv < MAX_REPLY_LEN)
     {
-        if (poll(&pfd,1, RESPONSE_TIMEOUT * 1000) > 0)
+        if (select(nSocket+1,&infd,NULL,NULL,&tv) > 0)
         {
             if (recv(nSocket, &lpszBuffer[nRecv], 1, 0) <= 0)
             {
--- D:/Wine-CVS/wine/dlls/wininet/internet.h	Fri Mar 28 20:13:36 2008
+++ D:/ReactOS-Trunk/reactos/dll/win32/wininet/internet.h	Thu May 29 19:01:31 2008
@@ -23,6 +23,9 @@
 #ifndef _WINE_INTERNET_H_
 #define _WINE_INTERNET_H_
 
+/* ReactOS-specific definitions */
+#define CP_UNIXCP   CP_THREAD_ACP
+
 #ifndef __WINE_CONFIG_H
 # error You must include config.h to use this header
 #endif
--- D:/Wine-CVS/wine/dlls/wininet/netconnection.c	Sat May 17 12:09:49 2008
+++ D:/ReactOS-Trunk/reactos/dll/win32/wininet/netconnection.c	Sat May 31 12:01:55 2008
@@ -64,7 +64,7 @@
 #include "winsock2.h"
 
 #define RESPONSE_TIMEOUT        30            /* FROM internet.c */
-
+#define sock_get_error(x) WSAGetLastError()
 
 WINE_DEFAULT_DEBUG_CHANNEL(wininet);
 
@@ -206,6 +206,7 @@
         return TRUE;
 }
 
+#if 0
 /* translate a unix error code into a winsock one */
 static int sock_get_error( int err )
 {
@@ -272,6 +273,7 @@
 #endif
     return err;
 }
+#endif
 
 /******************************************************************************
  * NETCON_create
@@ -616,16 +618,19 @@
 
     if (!connection->useSSL)
     {
-        struct pollfd pfd;
+	struct timeval tv;
+	fd_set infd;
 	BOOL bSuccess = FALSE;
 	DWORD nRecv = 0;
 
-        pfd.fd = connection->socketFD;
-        pfd.events = POLLIN;
+	FD_ZERO(&infd);
+	FD_SET(connection->socketFD, &infd);
+	tv.tv_sec=RESPONSE_TIMEOUT;
+	tv.tv_usec=0;
 
 	while (nRecv < *dwBuffer)
 	{
-	    if (poll(&pfd,1, RESPONSE_TIMEOUT * 1000) > 0)
+	    if (select(connection->socketFD+1,&infd,NULL,NULL,&tv) > 0)
 	    {
 		if (recv(connection->socketFD, &lpszBuffer[nRecv], 1, 0) <= 0)
 		{
--- D:/Wine-CVS/wine/dlls/wininet/rsrc.rc	Thu May 08 21:26:20 2008
+++ D:/ReactOS-Trunk/reactos/dll/win32/wininet/rsrc.rc	Thu May 29 18:57:29 2008
@@ -60,4 +60,5 @@
 #include "wininet_Ru.rc"
 #include "wininet_Si.rc"
 #include "wininet_Sv.rc"
+#include "wininet_Uk.rc"
 #include "wininet_Tr.rc"
