using System;
using System.IO;
using System.Collections.Generic;
using System.Text;
using System.Xml;

using SysGen.BuildEngine.Backends;
using SysGen.RBuild.Framework;
using SysGen.BuildEngine;

namespace SysGen.BuildEngine.Backends
{
    public class CatalogBackend : Backend
    {
        public CatalogBackend(SysGenEngine sysgen)
            : base(sysgen)
        {
        }

        protected override string FriendlyName
        {
            get { return "Component catalog"; }
        }

        private string CatalogFile
        {
            get { return Path.Combine(SysGen.BaseDirectory, "catalog.xml"); }
        }

        protected override void Generate()
        {
            // Creates an XML file is not exist
            using (XmlTextWriter writer = new XmlTextWriter(CatalogFile, Encoding.ASCII))
            {
                writer.Indentation = 4;
                writer.Formatting = Formatting.Indented;

                // Starts a new document 
                writer.WriteStartDocument();
                writer.WriteComment("File autogenerated by " + AppInfo);
                writer.WriteStartElement("modules");

                foreach (RBuildModule module in Project.Modules)
                {
                    writer.WriteStartElement("module");
                    writer.WriteAttributeString("name", module.Name);
                    writer.WriteAttributeString("type", module.Type.ToString());
                    writer.WriteAttributeString("base", module.Base);
                    writer.WriteAttributeString("path", module.Path);
                    writer.WriteAttributeString("desc", module.Description);

                    writer.WriteStartElement("dependencies");
                    foreach (RBuildModule library in module.Libraries)
                    {
                        writer.WriteStartElement("dependency");
                        writer.WriteAttributeString("name", library.Name);
                        writer.WriteEndElement();
                    }
                    writer.WriteEndElement();

                    writer.WriteEndElement();
                }

                writer.WriteEndElement();
                writer.WriteEndDocument();
            }
        }
    }
}