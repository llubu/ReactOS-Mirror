; ROS_EMULATOR_TYPE
;
; This variable defines which emulator should be used to emulate ReactOS
;
;ROS_EMU_TYPE=[qemu|vmware]

ROS_EMU_TYPE=qemu

; ROS_EMU_PATH
;
; This variable sets the path to the emulator 
;
ROS_EMU_PATH=E:\reactos\qemu\qemu.exe
;ROS_EMU_PATH=/usr/bin/qemu

; ROS_HDD_IMAGE
;
; The hdd image to use for running the emulator. If this variable is not
; set, SysReg will create a HDD with name "ros.img" using the qemu-img tool. It will search
; this tool in the directory of emulator and abort if the tool cannot be found
;ROS_HDD_IMAGE=E:\reactos\qemu\ReactOS.hd

; ROS_CD_IMAGE
;
; Set this variable if you want sysreg to perform a full ReactOS installation using 
; an ReactOS unattended installation disk. If this variable is not set, SysReg lets the emulator boot
; from harddisk.
;

;ROS_CD_IMAGE=E:\reactos\qemu\Reactos-Regtest.iso

;-------------------------------------------------------------------------------------------
; Additional Options
;

; ROS_MAX_TIME
;
;
; Set this variable to value which is the maximum time the emulator lets ReactOS run
; If not set, the emulator runs as long as no exception occurs in the emulator.
; ROS_MAX_TIME=180.0

; ROS_LOG_FILE
;
; filename of log which receives all debugging data gained from the Emulator
; ROS_LOG_FILE=debug.log

; ROS_SYM_DIR
;
; This directory sets the location where to search symbol files for modules
; In case of an BSOD, usermode exception, Sysreg will attempt to create a backtrace
; from the debugging data
;
; ROS_SYM_DIR=E:\reactos\output-i386

; ROS_DELAY_READ;
;
; When the emulator is started, it spends a little time loading and running through its
; BIOS. This time delays reading from the pipe/file untill the specified value.
; 
; Note: set this value if you have problems with timeouts or cutoff debugging data
;
ROS_DELAY_READ=4

; ROS_CHECK_POINT
;
; RosBoot will stop executing when it finds a string in the form
; SYSREG_CHECKPOINT:YOUR_CHECKPOINT_NAME
;
;ROS_CHECK_POINT=YOUR_CHECKPOINT_NAME

;ROS_CRITICAL_IMAGE
;
; If an user-mode exception occurs in an critical application, dll etc, i.e. setup.exe / explorer.exe, sysreg will report
; that the test has failed and quit debugging immediately
; 
;ROS_CRITICAL_IMAGE=setup.exe userinit.exe smss.exe winlogon.exe csrss.exe explorer.exe

; ROS_EMU_KILL
;
; Set this variable to true if you want SysReg to kill the emulator process when it has decided to exit.
;
; Note: Qemu>=0.9.0 has the option to shutdown on reboot (-no--reboot)
;
; ROS_EMU_KILL=yes

; ROS_EMU_MEM
;
; Controls how much memory the emulator use for ReactOS
;
; ROS_EMU_MEM=64

; ROS_BOOT_CMD
;
; Sysreg normally builds the boot command from ROS_EMU_PATH and ROS_CD_IMAGE etc... If you want to override
; all settings set this value
;
; ROS_BOOT_CMD=/usr/bin/qemu -serial stdio -m 64 -hda ~/reactos/qemu/ReactOS.hd -boot d -cdrom ~/reactos/qemu/bootcd.iso
; -no-reboot 

